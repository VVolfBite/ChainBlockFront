---
import Head from "../components/_head.astro";
import Footer from "../components/dashboard/_footer.astro";
import Topbar from "../components/dashboard/_topbar.astro";
import Sidenav from "../components/dashboard/_sidenav.astro";
import Scripts from "../components/_scripts.astro";

const title = "AdminLTE v4 | Dashboard";
const path = "../../dist";
const mainPage = "dashboard";
const page = "index";
---

<!doctype html>
<html lang="en">
  <!--begin::Head-->
  <head>
    <Head title={title} path={path} />
    <!-- apexcharts -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.css"
      integrity="sha256-4MX+61mt9NVvvuPjUWdUdyfZfxSB1/Rf9WtqRHgG5S0="
      crossorigin="anonymous"
    />

    <!-- jsvectormap -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/jsvectormap@1.5.3/dist/css/jsvectormap.min.css"
      integrity="sha256-+uGLJmmTKOqBr+2E6KDYs/NRsHxSkONXFHUL0fy2O/4="
      crossorigin="anonymous"
    />
  </head>
  <!--end::Head-->
  <!--begin::Body-->
  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
    <!--begin::App Wrapper-->
    <div class="app-wrapper">
      <Topbar path={path} />
      <Sidenav path={path} mainPage={mainPage} page={page} />
      <!--begin::App Main-->
      <main class="app-main">
        <!--begin::App Content Header-->
        <div class="app-content-header">
          <!--begin::Container-->
          <div class="container-fluid">
            <!--begin::Row-->
            <div class="row">
              <div class="col-sm-6">
                <h3 class="mb-0">Dashboard</h3>
              </div>
              <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                  <li class="breadcrumb-item"><a href="#">Home</a></li>
                  <li class="breadcrumb-item active" aria-current="page">
                    Dashboard
                  </li>
                </ol>
              </div>
            </div>
            <!--end::Row-->
          </div>
          <!--end::Container-->
        </div>
        <!--end::App Content Header-->
        <!--begin::App Content-->
        <div class="app-content">
          <!--begin::Container-->
          <div class="container-fluid">
            <div class="row">
              <!--begin::Form Validation-->
              <div class="card card-info card-outline mb-4">
                <!--begin::Header-->
                <div class="card-header">
                  <div class="card-title">Form Validation</div>
                </div>
                <!--end::Header-->
                <!--begin::Form-->
                <form class="needs-validation" novalidate>
                  <!--begin::Body-->
                  <div class="card-body">
                    <!--begin::Row-->
                    <div class="row g-3">
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom01" class="form-label"
                          >First name</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          id="validationCustom01"
                          value="Mark"
                          required
                        />
                        <div class="valid-feedback">Looks good!</div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom02" class="form-label"
                          >Last name</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          id="validationCustom02"
                          value="Otto"
                          required
                        />
                        <div class="valid-feedback">Looks good!</div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustomUsername" class="form-label"
                          >Username</label
                        >
                        <div class="input-group has-validation">
                          <span class="input-group-text" id="inputGroupPrepend"
                            >@</span
                          >
                          <input
                            type="text"
                            class="form-control"
                            id="validationCustomUsername"
                            aria-describedby="inputGroupPrepend"
                            required
                          />
                          <div class="invalid-feedback">
                            Please choose a username.
                          </div>
                        </div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom03" class="form-label"
                          >City</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          id="validationCustom03"
                          required
                        />
                        <div class="invalid-feedback">
                          Please provide a valid city.
                        </div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom04" class="form-label"
                          >State</label
                        >
                        <select
                          class="form-select"
                          id="validationCustom04"
                          required
                        >
                          <option selected disabled value="">Choose...</option>
                          <option>...</option>
                        </select>
                        <div class="invalid-feedback">
                          Please select a valid state.
                        </div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom05" class="form-label"
                          >Zip</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          id="validationCustom05"
                          required
                        />
                        <div class="invalid-feedback">
                          Please provide a valid zip.
                        </div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-12">
                        <div class="form-check">
                          <input
                            class="form-check-input"
                            type="checkbox"
                            value=""
                            id="invalidCheck"
                            required
                          />
                          <label class="form-check-label" for="invalidCheck">
                            Agree to terms and conditions
                          </label>
                          <div class="invalid-feedback">
                            You must agree before submitting.
                          </div>
                        </div>
                      </div>
                      <!--end::Col-->
                    </div>
                    <!--end::Row-->
                  </div>
                  <!--end::Body-->
                  <!--begin::Footer-->
                  <div class="card-footer">
                    <button class="btn btn-info" type="submit"
                      >Submit form</button
                    >
                  </div>
                  <!--end::Footer-->
                </form>
                <!--end::Form-->
                <!--begin::JavaScript-->
                <script is:inline>
                  // Example starter JavaScript for disabling form submissions if there are invalid fields
                  (() => {
                    "use strict";

                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    const forms =
                      document.querySelectorAll(".needs-validation");

                    // Loop over them and prevent submission
                    Array.from(forms).forEach((form) => {
                      form.addEventListener(
                        "submit",
                        (event) => {
                          if (!form.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                          }

                          form.classList.add("was-validated");
                        },
                        false,
                      );
                    });
                  })();
                </script>
                <!--end::JavaScript-->
              </div>
            </div>
            <!--end::Form Validation-->

            <!--begin::Row-->
            <div class="row">
              <!--begin::Form Validation-->
              <div class="card card-info card-outline mb-4">
                <!--begin::Header-->
                <div class="card-header">
                  <div class="card-title">Form Validation</div>
                </div>
                <!--end::Header-->
                <!--begin::Form-->
                <form class="needs-validation" novalidate>
                  <!--begin::Body-->
                  <div class="card-body">
                    <!--begin::Row-->
                    <div class="row g-3">
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom01" class="form-label"
                          >First name</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          id="validationCustom01"
                          value="Mark"
                          required
                        />
                        <div class="valid-feedback">Looks good!</div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom02" class="form-label"
                          >Last name</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          id="validationCustom02"
                          value="Otto"
                          required
                        />
                        <div class="valid-feedback">Looks good!</div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustomUsername" class="form-label"
                          >Username</label
                        >
                        <div class="input-group has-validation">
                          <span class="input-group-text" id="inputGroupPrepend"
                            >@</span
                          >
                          <input
                            type="text"
                            class="form-control"
                            id="validationCustomUsername"
                            aria-describedby="inputGroupPrepend"
                            required
                          />
                          <div class="invalid-feedback">
                            Please choose a username.
                          </div>
                        </div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom03" class="form-label"
                          >City</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          id="validationCustom03"
                          required
                        />
                        <div class="invalid-feedback">
                          Please provide a valid city.
                        </div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom04" class="form-label"
                          >State</label
                        >
                        <select
                          class="form-select"
                          id="validationCustom04"
                          required
                        >
                          <option selected disabled value="">Choose...</option>
                          <option>...</option>
                        </select>
                        <div class="invalid-feedback">
                          Please select a valid state.
                        </div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-md-6">
                        <label for="validationCustom05" class="form-label"
                          >Zip</label
                        >
                        <input
                          type="text"
                          class="form-control"
                          id="validationCustom05"
                          required
                        />
                        <div class="invalid-feedback">
                          Please provide a valid zip.
                        </div>
                      </div>
                      <!--end::Col-->
                      <!--begin::Col-->
                      <div class="col-12">
                        <div class="form-check">
                          <input
                            class="form-check-input"
                            type="checkbox"
                            value=""
                            id="invalidCheck"
                            required
                          />
                          <label class="form-check-label" for="invalidCheck">
                            Agree to terms and conditions
                          </label>
                          <div class="invalid-feedback">
                            You must agree before submitting.
                          </div>
                        </div>
                      </div>
                      <!--end::Col-->
                    </div>
                    <!--end::Row-->
                  </div>
                  <!--end::Body-->
                  <!--begin::Footer-->
                  <div class="card-footer">
                    <button class="btn btn-info" type="submit"
                      >Submit form</button
                    >
                  </div>
                  <!--end::Footer-->
                </form>
                <!--end::Form-->
                <!--begin::JavaScript-->
                <script is:inline>
                  // Example starter JavaScript for disabling form submissions if there are invalid fields
                  (() => {
                    "use strict";

                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    const forms =
                      document.querySelectorAll(".needs-validation");

                    // Loop over them and prevent submission
                    Array.from(forms).forEach((form) => {
                      form.addEventListener(
                        "submit",
                        (event) => {
                          if (!form.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                          }

                          form.classList.add("was-validated");
                        },
                        false,
                      );
                    });
                  })();
                </script>
                <!--end::JavaScript-->
              </div>
            </div>
            <!--end::Row-->
          </div>
        </div>
        <!-- /.Start col -->
      </main>
      <!-- /.row (main row) -->

      <!--end::Container-->

      <!--end::App Content-->

      <!--end::App Main-->
      <Footer />

      <!--end::App Wrapper-->
      <!--begin::Script-->
      <Scripts path={path} />

      <!-- OPTIONAL SCRIPTS -->

      <!-- sortablejs -->
      <script
        src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"
        integrity="sha256-ipiJrswvAR4VAx/th+6zWsdeYmVae0iJuiR+6OqHJHQ="
        crossorigin="anonymous"></script>

      <!-- sortablejs -->
      <script is:inline>
        const connectedSortables =
          document.querySelectorAll(".connectedSortable");
        connectedSortables.forEach((connectedSortable) => {
          let sortable = new Sortable(connectedSortable, {
            group: "shared",
            handle: ".card-header",
          });
        });

        const cardHeaders = document.querySelectorAll(
          ".connectedSortable .card-header",
        );
        cardHeaders.forEach((cardHeader) => {
          cardHeader.style.cursor = "move";
        });
      </script>

      <!-- apexcharts -->
      <script
        src="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.min.js"
        integrity="sha256-+vh8GkaU7C9/wbSLIcwq82tQ2wTf44aOHA8HlBMwRI8="
        crossorigin="anonymous"></script>

      <!-- ChartJS -->
      <script is:inline>
        // NOTICE!! DO NOT USE ANY OF THIS JAVASCRIPT
        // IT'S ALL JUST JUNK FOR DEMO
        // ++++++++++++++++++++++++++++++++++++++++++

        const sales_chart_options = {
          series: [
            {
              name: "Digital Goods",
              data: [28, 48, 40, 19, 86, 27, 90],
            },
            {
              name: "Electronics",
              data: [65, 59, 80, 81, 56, 55, 40],
            },
          ],
          chart: {
            height: 300,
            type: "area",
            toolbar: {
              show: false,
            },
          },
          legend: {
            show: false,
          },
          colors: ["#0d6efd", "#20c997"],
          dataLabels: {
            enabled: false,
          },
          stroke: {
            curve: "smooth",
          },
          xaxis: {
            type: "datetime",
            categories: [
              "2023-01-01",
              "2023-02-01",
              "2023-03-01",
              "2023-04-01",
              "2023-05-01",
              "2023-06-01",
              "2023-07-01",
            ],
          },
          tooltip: {
            x: {
              format: "MMMM yyyy",
            },
          },
        };

        const sales_chart = new ApexCharts(
          document.querySelector("#revenue-chart"),
          sales_chart_options,
        );
        sales_chart.render();
      </script>

      <!-- jsvectormap -->
      <script
        src="https://cdn.jsdelivr.net/npm/jsvectormap@1.5.3/dist/js/jsvectormap.min.js"
        integrity="sha256-/t1nN2956BT869E6H4V1dnt0X5pAQHPytli+1nTZm2Y="
        crossorigin="anonymous"></script>
      <script
        src="https://cdn.jsdelivr.net/npm/jsvectormap@1.5.3/dist/maps/world.js"
        integrity="sha256-XPpPaZlU8S/HWf7FZLAncLg2SAkP8ScUTII89x9D3lY="
        crossorigin="anonymous"></script>

      <!-- jsvectormap -->
      <script is:inline>
        const visitorsData = {
          US: 398, // USA
          SA: 400, // Saudi Arabia
          CA: 1000, // Canada
          DE: 500, // Germany
          FR: 760, // France
          CN: 300, // China
          AU: 700, // Australia
          BR: 600, // Brazil
          IN: 800, // India
          GB: 320, // Great Britain
          RU: 3000, // Russia
        };

        // World map by jsVectorMap
        const map = new jsVectorMap({
          selector: "#world-map",
          map: "world",
        });

        // Sparkline charts
        const option_sparkline1 = {
          series: [
            {
              data: [1000, 1200, 920, 927, 931, 1027, 819, 930, 1021],
            },
          ],
          chart: {
            type: "area",
            height: 50,
            sparkline: {
              enabled: true,
            },
          },
          stroke: {
            curve: "straight",
          },
          fill: {
            opacity: 0.3,
          },
          yaxis: {
            min: 0,
          },
          colors: ["#DCE6EC"],
        };

        const sparkline1 = new ApexCharts(
          document.querySelector("#sparkline-1"),
          option_sparkline1,
        );
        sparkline1.render();

        const option_sparkline2 = {
          series: [
            {
              data: [515, 519, 520, 522, 652, 810, 370, 627, 319, 630, 921],
            },
          ],
          chart: {
            type: "area",
            height: 50,
            sparkline: {
              enabled: true,
            },
          },
          stroke: {
            curve: "straight",
          },
          fill: {
            opacity: 0.3,
          },
          yaxis: {
            min: 0,
          },
          colors: ["#DCE6EC"],
        };

        const sparkline2 = new ApexCharts(
          document.querySelector("#sparkline-2"),
          option_sparkline2,
        );
        sparkline2.render();

        const option_sparkline3 = {
          series: [
            {
              data: [15, 19, 20, 22, 33, 27, 31, 27, 19, 30, 21],
            },
          ],
          chart: {
            type: "area",
            height: 50,
            sparkline: {
              enabled: true,
            },
          },
          stroke: {
            curve: "straight",
          },
          fill: {
            opacity: 0.3,
          },
          yaxis: {
            min: 0,
          },
          colors: ["#DCE6EC"],
        };

        const sparkline3 = new ApexCharts(
          document.querySelector("#sparkline-3"),
          option_sparkline3,
        );
        sparkline3.render();
      </script>
      <!--end::Script-->
    </div><!--end::Body-->
  </body>
</html>
