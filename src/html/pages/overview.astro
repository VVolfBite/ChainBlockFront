---
import Head from "../components/_head.astro";
import Footer from "../components/dashboard/_footer.astro";
import Topbar from "../components/dashboard/_topbar.astro";
import Sidenav from "../components/dashboard/_sidenav.astro";
import Scripts from "../components/_scripts.astro";

const title = "AdminLTE | Dashboard v2";
const path = "../../dist";
const mainPage = "dashboard";
const page = "overview";
---

<!doctype html>
<html lang="en">
  <head>
    <Head title={title} path={path} />
    <!-- apexcharts -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.css"
      integrity="sha256-4MX+61mt9NVvvuPjUWdUdyfZfxSB1/Rf9WtqRHgG5S0="
      crossorigin="anonymous"
    />
  </head>
  <body class="layout-fixed sidebar-expand-lg bg-body-tertiary">
    <div class="app-wrapper">
      <Topbar path={path} />
      <Sidenav path={path} mainPage={mainPage} page={page} />
      <main class="app-main">
        <div class="app-content-header">
          <div class="container-fluid">
            <div class="row">
              <div class="col-sm-6">
                <h3 class="mb-0">总览面板</h3>
              </div>
              <div class="col-sm-6">
                <ol class="breadcrumb float-sm-end">
                  <li class="breadcrumb-item"><a href="">面板</a></li>
                  <li class="breadcrumb-item active" aria-current="page">
                    总览面板
                  </li>
                </ol>
              </div>
            </div>
          </div>
        </div>
        <div class="app-content">
          <div class="container-fluid">
            <div class="row">
              <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                  <span class="info-box-icon text-bg-primary shadow-sm">
                    <i class="bi bi-box-fill"></i>
                  </span>
                  <div class="info-box-content">
                    <span class="info-box-text">区块数</span>
                    <span class="info-box-number" id="blockNumBox"></span>
                  </div>
                </div>
              </div>
              <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                  <span class="info-box-icon text-bg-danger shadow-sm">
                    <i class="bi bi bi-clipboard2-check"></i>
                  </span>
                  <div class="info-box-content">
                    <span class="info-box-text">事务量</span>
                    <span class="info-box-number" id="txnNumBox"></span>
                  </div>
                </div>
              </div>
              <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                  <span class="info-box-icon text-bg-success shadow-sm">
                    <i class="bi bi-gear-fill"></i>
                  </span>
                  <div class="info-box-content">
                    <span class="info-box-text">节点数</span>
                    <span class="info-box-number" id="nodeNumBox"></span>
                  </div>
                </div>
              </div>
              <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                  <span class="info-box-icon text-bg-warning shadow-sm">
                    <i class="bi bi-file-earmark-code"></i>
                  </span>
                  <div class="info-box-content">
                    <span class="info-box-text">链码数</span>
                    <span class="info-box-number" id="chainCodeNumBox"></span>
                  </div>
                </div>
              </div>
            </div>
            <script is:inline>
              function requestnormalInfo() {
                fetch("http://localhost:8000/normalInfo")
                  .then((response) => {
                    if (response.ok) {
                      return response.json();
                    } else {
                      throw new Error("Failed to fetch data");
                    }
                  })
                  .then((data) => {
                    const { blockNum, txnNum, nodeNum, chainCodeNum } = data;
                    const blockNumBox = document.getElementById("blockNumBox");
                    blockNumBox.innerHTML = blockNum;
                    const txnNumBox = document.getElementById("txnNumBox");
                    txnNumBox.innerHTML = txnNum;
                    const nodeNumBox = document.getElementById("nodeNumBox");
                    nodeNumBox.innerHTML = nodeNum;
                    const chainCodeNumBox =
                      document.getElementById("chainCodeNumBox");
                    chainCodeNumBox.innerHTML = chainCodeNum;
                  })
                  .catch((error) => {
                    console.error("Error:", error);
                  });
              }
              requestnormalInfo();
              setInterval(requestnormalInfo, 5000);
            </script>

            <div class="row">
              <div class="col-md-12">
                <div class="card mb-4">
                  <div class="card-header">
                    <h5 class="card-title">运行情况</h5>
                    <div class="card-tools">
                      <button
                        type="button"
                        class="btn btn-tool"
                        data-lte-toggle="card-collapse"
                      >
                        <i data-lte-icon="expand" class="bi bi-plus-lg"></i>
                        <i data-lte-icon="collapse" class="bi bi-dash-lg"></i>
                      </button>
                      <div class="btn-group">
                        <button
                          type="button"
                          class="btn btn-tool dropdown-toggle"
                          data-bs-toggle="dropdown"
                        >
                          <i class="bi bi-wrench"></i>
                        </button>
                        <div
                          class="dropdown-menu dropdown-menu-end"
                          role="menu"
                        >
                          <li
                            class="dropdown-item"
                            data-chart="txnThroughputChart"
                          >
                            事务吞吐率
                          </li>
                          <li
                            class="dropdown-item"
                            data-chart="blockThroughputChart"
                          >
                            块吞吐率
                          </li>
                          <li
                            class="dropdown-item"
                            data-chart="txnLatencyChart"
                          >
                            事务时延
                          </li>
                          <li
                            class="dropdown-item"
                            data-chart="blockLatencyChart"
                          >
                            块时延
                          </li>
                        </div>
                      </div>
                      <button
                        type="button"
                        class="btn btn-tool"
                        data-lte-toggle="card-remove"
                      >
                        <i class="bi bi-x-lg"></i>
                      </button>
                    </div>
                  </div>
                  <div class="card-body">
                    <div class="row">
                      <div class="col-md-8">
                        <p class="text-center">
                          <strong id="chartName"></strong>
                           (近一分钟的每5s采样)
                        </p>
                        <div id="latency-throughput-chart"></div>
                      </div>
                      <div class="col-md-4">
                        <p class="text-center">
                          <strong>吞吐/时延总览(每5s采样)</strong>
                        </p>
                        <div class="progress-group">
                          事务吞吐率
                          <span class="float-end"
                            ><b id="txnThroughputText"></b>份</span
                          >
                          <div class="progress progress-sm">
                            <div
                              id="txnThroughputBar"
                              class="progress-bar text-bg-primary"
                              style="width: 80%"
                            >
                            </div>
                          </div>
                        </div>
                        <div class="progress-group">
                          <span class="progress-text">块吞吐率</span>
                          <span class="float-end"
                            ><b id="blockThroughputText"></b>块</span
                          >
                          <div class="progress progress-sm">
                            <div
                              id="blockThroughputBar"
                              class="progress-bar text-bg-success"
                              style="width: 60%"
                            >
                            </div>
                          </div>
                        </div>
                        <div class="progress-group">
                          事务时延
                          <span class="float-end">
                            <b id="txnLatencyText"></b>ms
                          </span>
                          <div class="progress progress-sm">
                            <div
                              id="txnLatencyBar"
                              class="progress-bar text-bg-danger"
                              style="width: 75%"
                            >
                            </div>
                          </div>
                        </div>
                        <div class="progress-group">
                          块时延
                          <span class="float-end"
                            ><b id="blockLatencyText"></b>ms</span
                          >
                          <div class="progress progress-sm">
                            <div
                              id="blockLatencyBar"
                              class="progress-bar text-bg-warning"
                              style="width: 50%"
                            >
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div class="card-footer">
                    <div class="row">
                      <div class="col-md-3 col-6">
                        <div class="text-center border-end">
                          <h5 class="fw-bold mb-0">
                            <b id="txnThroughputAvgText"></b> 份/s
                          </h5>
                          <span class="text-uppercase">平均事务吞吐率</span>
                        </div>
                      </div>
                      <div class="col-md-3 col-6">
                        <div class="text-center border-end">
                          <h5 class="fw-bold mb-0">
                            <b id="blockThroughputAvgText"></b> 块/s
                          </h5>
                          <span class="text-uppercase">平均块吞吐率</span>
                        </div>
                      </div>
                      <div class="col-md-3 col-6">
                        <div class="text-center border-end">
                          <h5 class="fw-bold mb-0">
                            <b id="txnLatencyAvgText"></b> ms
                          </h5>
                          <span class="text-uppercase">平均事务时延</span>
                        </div>
                      </div>
                      <div class="col-md-3 col-6">
                        <div class="text-center">
                          <h5 class="fw-bold mb-0">
                            <b id="blockLatencyAvgText"></b>ms
                          </h5>
                          <span class="text-uppercase">平均块时延</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <script
              src="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.min.js"
              integrity="sha256-+vh8GkaU7C9/wbSLIcwq82tQ2wTf44aOHA8HlBMwRI8="
              crossorigin="anonymous"></script>
            <script is:inline>
              const chartData = {
                txnThroughputChart: {
                  name: "事务吞吐率",
                  data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                },
                blockThroughputChart: {
                  name: "块吞吐率",
                  data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                },
                txnLatencyChart: {
                  name: "事务时延",
                  data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                },
                blockLatencyChart: {
                  name: "块时延",
                  data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                },
              };
              const chartOptions = {
                series: [
                  {
                    name: chartData.txnThroughputChart.name,
                    data: chartData.txnThroughputChart.data,
                  },
                ],
                chart: { height: 180, type: "area", toolbar: { show: false } },
                legend: { show: false },
                dataLabels: { enabled: false },
                stroke: { curve: "smooth" },
                xaxis: {
                  categories: [
                    "60s",
                    "55s",
                    "50s",
                    "45s",
                    "40s",
                    "35s",
                    "30s",
                    "25s",
                    "20s",
                    "15s",
                    "10s",
                    "5s",
                    "0s",
                  ],
                },
              };
              const chartName = document.getElementById("chartName");
              chartName.innerHTML = "事务吞吐率";
              const latencyThroughputChart = new ApexCharts(
                document.querySelector("#latency-throughput-chart"),
                chartOptions,
              );
              latencyThroughputChart.render();
              document.querySelectorAll(".dropdown-item").forEach((item) => {
                item.addEventListener("click", () => {
                  const selectedChart = item.getAttribute("data-chart");
                  const chartConfig = chartData[selectedChart];
                  latencyThroughputChart.updateSeries([
                    {
                      name: chartConfig.name,
                      data: chartConfig.data,
                    },
                  ]);
                  const chartName = document.getElementById("chartName");
                  chartName.innerHTML = chartConfig.name;
                });
              });
              function requestRunningInfo() {
                fetch("http://localhost:8000/runningInfo")
                  .then((response) => {
                    if (response.ok) {
                      return response.json();
                    } else {
                      throw new Error("Failed to fetch data");
                    }
                  })
                  .then((data) => {
                    const {
                      blockLatency,
                      blockLatencyAvg,
                      blockLatencyMax,
                      blockThroughput,
                      blockThroughputAvg,
                      blockThroughputMax,
                      txnLatency,
                      txnLatencyAvg,
                      txnLatencyMax,
                      txnThroughput,
                      txnThroughputAvg,
                      txnThroughputMax,
                    } = data;
                    const blockLatencyText =
                      document.getElementById("blockLatencyText");
                    blockLatencyText.innerHTML = blockLatency;
                    const blockLatencyBar =
                      document.getElementById("blockLatencyBar");
                    blockLatencyBar.style.width =
                      (100 * blockLatency) / blockLatencyMax + "%";
                    const blockLatencyAvgText = document.getElementById(
                      "blockLatencyAvgText",
                    );
                    blockLatencyAvgText.innerHTML = blockLatencyAvg;

                    const blockThroughputText = document.getElementById(
                      "blockThroughputText",
                    );
                    blockThroughputText.innerHTML = blockThroughput;
                    const blockThroughputBar =
                      document.getElementById("blockThroughputBar");
                    blockThroughputBar.style.width =
                      (100 * blockThroughput) / blockThroughputMax + "%";
                    const blockThroughputAvgText = document.getElementById(
                      "blockThroughputAvgText",
                    );
                    blockThroughputAvgText.innerHTML = blockThroughputAvg;

                    const txnLatencyText =
                      document.getElementById("txnLatencyText");
                    txnLatencyText.innerHTML = txnLatency;
                    const txnLatencyBar =
                      document.getElementById("txnLatencyBar");
                    txnLatencyBar.style.width =
                      (100 * txnLatency) / txnLatencyMax + "%";
                    const txnLatencyAvgText =
                      document.getElementById("txnLatencyAvgText");
                    txnLatencyAvgText.innerHTML = txnLatencyAvg;

                    const txnThroughputText =
                      document.getElementById("txnThroughputText");
                    txnThroughputText.innerHTML = txnThroughput;
                    const txnThroughputBar =
                      document.getElementById("txnThroughputBar");
                    txnThroughputBar.style.width =
                      (100 * txnThroughput) / txnThroughputMax + "%";
                    const txnThroughputAvgText = document.getElementById(
                      "txnThroughputAvgText",
                    );
                    txnThroughputAvgText.innerHTML = txnThroughputAvg;

                    chartData.txnThroughputChart.data.shift();
                    chartData.txnThroughputChart.data.push(data.txnThroughput);

                    chartData.blockThroughputChart.data.shift();
                    chartData.blockThroughputChart.data.push(
                      data.blockThroughput,
                    );

                    chartData.txnLatencyChart.data.shift();
                    chartData.txnLatencyChart.data.push(data.txnLatency);

                    chartData.blockLatencyChart.data.shift();
                    chartData.blockLatencyChart.data.push(data.blockLatency);

                    latencyThroughputChart.updateOptions({});
                  })
                  .catch((error) => {
                    console.error("Error:", error);
                  });
              }
              requestRunningInfo();
              setInterval(requestRunningInfo, 5000);
            </script>

            <div class="row">
              <div class="col-md-8">
                <div class="card">
                  <div class="card-header">
                    <h3 class="card-title"><strong>最新块概览</strong></h3>
                    <div class="card-tools">
                      <button
                        type="button"
                        class="btn btn-tool"
                        data-lte-toggle="card-collapse"
                      >
                        <i data-lte-icon="expand" class="bi bi-plus-lg"></i>
                        <i data-lte-icon="collapse" class="bi bi-dash-lg"></i>
                      </button>
                      <button
                        type="button"
                        class="btn btn-tool"
                        data-lte-toggle="card-remove"
                      >
                        <i class="bi bi-x-lg"></i>
                      </button>
                    </div>
                  </div>
                  <div class="card-body p-0">
                    <div class="table-responsive">
                      <table class="table m-0">
                        <thead>
                          <tr>
                            <th>块编号</th>
                            <th>块内事务量</th>
                            <th>块状态</th>
                            <th>块阶段计时</th>
                          </tr>
                        </thead>
                        <tbody id="latestBlockTable"> </tbody>
                      </table>
                    </div>
                  </div>
                  <div class="card-footer clearfix">
                    <a
                      href="javascript:void(0)"
                      class="btn btn-sm btn-primary float-start"
                    >
                      添加新的事务
                    </a>
                    <a
                      href="javascript:void(0)"
                      class="btn btn-sm btn-secondary float-end"
                    >
                      查看所有事务
                    </a>
                  </div>
                </div>
              </div>
              <script is:inline>
                function renderChart(selector, data) {
                  const options = {
                    series: [{ data }],
                    xaxis: { categories: ["发布", "排队", "提交", "确认"] },
                    chart: {
                      type: "line",
                      width: 150,
                      height: 30,
                      sparkline: { enabled: true },
                    },
                    colors: ["var(--bs-primary)"],
                    stroke: { width: 2 },
                    tooltip: {
                      fixed: { enabled: false },
                      x: { show: true },
                      y: {
                        title: {
                          formatter: function (seriesName) {
                            return "计时:";
                          },
                        },
                        formatter: function (value) {
                          return value + "ms";
                        },
                      },
                      marker: { show: false },
                    },
                  };

                  const chart = new ApexCharts(document.querySelector(selector),options,);
                  chart.render();
                }

                function getStatusBadgeClassName(status) {
                  switch (status) {
                    case "Pending":
                      return "badge text-bg-secondary";
                    case "Committed":
                      return "badge text-bg-primary";
                    case "Finalized":
                      return "badge text-bg-warning";
                    case "Failed":
                      return "badge text-bg-danger";
                    case "Successed":
                      return "badge text-bg-success";
                    default:
                      // 默认情况下使用蓝色
                      return "badge text-bg-success";
                  }
                }

                function requestBlockInfo() {
                  fetch("http://localhost:8000/latestBlock")
                    .then((response) => {
                      if (response.ok) {
                        return response.json();
                      } else {
                        throw new Error("Failed to fetch data");
                      }
                    })
                    .then((data) => {
                      const parentElement =
                        document.getElementById("latestBlockTable");
                      const blockList = data;
                      parentElement.innerHTML = "";
                      console.log(blockList);
                      blockList.forEach((block) => {
                        console.log(block);
                        const newRow = document.createElement("tr");
                        const cell1 = document.createElement("td");
                        const blockNum = document.createElement("b");
                        blockNum.textContent = "#" + block.blockNum;
                        cell1.appendChild(blockNum);
                        const cell2 = document.createElement("td");
                        cell2.textContent = block.blockTxnNum;
                        const cell3 = document.createElement("td");
                        const statusBadge = document.createElement("span");
                        statusBadge.textContent = block.blockStatus;
                        statusBadge.className = getStatusBadgeClassName(block.blockStatus,);
                        cell3.appendChild(statusBadge);
                        const cell4 = document.createElement("td");
                        const sparklineDiv = document.createElement("div");
                        sparklineDiv.id = "table-sparkline-" + block.blockNum;
                        cell4.appendChild(sparklineDiv);
                        
                        newRow.appendChild(cell1);
                        newRow.appendChild(cell2);
                        newRow.appendChild(cell3);
                        newRow.appendChild(cell4);
                        
                        parentElement.appendChild(newRow);
                        renderChart("#" + sparklineDiv.id, block.blockTimer);
                      });
                    })
                    .catch((error) => {
                      console.error("Error:", error);
                    });
                }
                setInterval(requestBlockInfo, 5000);
              </script>

              <div class="col-md-4">
                <div class="card mb-4">
                  <div class="card-header">
                    <h3 class="card-title">暂定</h3>
                    <div class="card-tools">
                      <button
                        type="button"
                        class="btn btn-tool"
                        data-lte-toggle="card-collapse"
                      >
                        <i data-lte-icon="expand" class="bi bi-plus-lg"></i>
                        <i data-lte-icon="collapse" class="bi bi-dash-lg"></i>
                      </button>
                      <button
                        type="button"
                        class="btn btn-tool"
                        data-lte-toggle="card-remove"
                      >
                        <i class="bi bi-x-lg"></i>
                      </button>
                    </div>
                  </div>
                  <div class="card-body">
                    <div class="row">
                      <div class="col-12">
                        <div id="pie-chart"></div>
                      </div>
                    </div>
                  </div>
                  <div class="card-footer p-0">
                    <ul class="nav nav-pills flex-column">
                      <li class="nav-item">
                        <a href="#" class="nav-link">
                          United States of America
                          <span class="float-end text-danger">
                            <i class="bi bi-arrow-down fs-7"></i>
                             12%
                          </span>
                        </a>
                      </li>
                      <li class="nav-item">
                        <a href="#" class="nav-link">
                          India
                          <span class="float-end text-success">
                            <i class="bi bi-arrow-up fs-7"></i> 4%
                          </span>
                        </a>
                      </li>
                      <li class="nav-item">
                        <a href="#" class="nav-link">
                          China
                          <span class="float-end text-info">
                            <i class="bi bi-arrow-left fs-7"></i> 0%
                          </span>
                        </a>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
              <script is:inline>
                const pie_chart_options = {
                  series: [700, 500, 400, 600, 300, 100],
                  chart: {
                    type: "donut",
                  },
                  labels: ["Chrome", "Edge", "FireFox", "Safari", "Opera", "IE"],
                  dataLabels: {
                    enabled: false,
                  },
                  colors: [
                    "#0d6efd",
                    "#20c997",
                    "#ffc107",
                    "#d63384",
                    "#6f42c1",
                    "#adb5bd",
                  ],
                };     
                const pie_chart = new ApexCharts(
                  document.querySelector("#pie-chart"),
                  pie_chart_options,
                );
                pie_chart.render();
              </script>
            </div>
          </div>
        </div>
      </main>
      <Footer />
    </div>
    <Scripts path={path} />
  </body>
</html>
